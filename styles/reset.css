@charset "UTF-8";

*:where(:not(html, iframe, canvas, img, svg, video, audio):not(svg *, symbol *)) {
	all: unset;
	display: revert;
}

*,
*::before,
*::after {
	box-sizing: border-box;
}

html,
body {
	height: 100%;
}

html {
	font-size: 16px;
	-ms-text-size-adjust: 100%;
	-webkit-text-size-adjust: 100%;
	text-rendering: optimizeLegibility;
	-webkit-font-smoothing: antialiased;
}

body {
	line-height: 1;
}

input,
button,
select,
optgroup,
textarea {
	font: inherit;
	line-height: inherit;
}

ol,
ul,
menu {
	list-style: none;
}

a,
button,
[role="button"] {
	cursor: pointer;
}

button,
input {
	overflow: visible;
}

[type="button"],
[type="reset"],
[type="submit"],
button {
	-webkit-appearance: button;
}

output {
	display: inline-block;
}
iframe {
	border: 0;
}
summary {
	display: list-item;
	cursor: pointer;
}
progress {
	vertical-align: baseline;
}

img,
picture {
	display: block;
	max-width: 100%;
	height: auto;
}

img,
svg {
	vertical-align: middle;
}

b,
strong {
	font-weight: bolder;
}

.small,
small {
	font-size: 80%;
}

.mark,
mark {
	padding: 0.2em;
	background-color: #fcf8e3;
}

sub,
sup {
	position: relative;
	font-size: 75%;
	line-height: 0;
	vertical-align: baseline;
}

sub {
	bottom: -0.25em;
}

sup {
	top: -0.5em;
}

hr {
	-webkit-box-sizing: content-box;
	box-sizing: content-box;
	height: 0;
	overflow: visible;
}

pre,
code,
kbd,
samp {
	font-family: var(--font-family-monospace);
	font-size: 1em;
}

pre {
	font-family: var(--font-family-monospace);
	font-size: 1em;
}

table {
	caption-side: bottom;
	border-collapse: collapse;
}

label {
	display: inline-block;
}

input,
textarea {
	-webkit-user-select: auto;
}

textarea {
	white-space: revert;
}

button,
select {
	text-transform: none;
}

textarea {
	resize: vertical;
}

output {
	display: inline-block;
}

summary {
	display: list-item;
	cursor: pointer;
}

progress {
	vertical-align: baseline;
}

meter {
	-webkit-appearance: revert;
	-moz-appearance: revert;
	appearance: revert;
}

::-webkit-input-placeholder {
	color: unset;
}

::-moz-placeholder {
	color: unset;
}

:-ms-input-placeholder {
	color: unset;
}

::-ms-input-placeholder {
	color: unset;
}

::placeholder {
	color: unset;
}

:where([hidden]) {
	display: none;
}

:where([contenteditable]:not([contenteditable="false"])) {
	-moz-user-modify: read-write;
	-webkit-user-modify: read-write;
	overflow-wrap: break-word;
	-webkit-line-break: after-white-space;
	-webkit-user-select: auto;
}

:where([draggable="true"]) {
	-webkit-user-drag: element;
}
